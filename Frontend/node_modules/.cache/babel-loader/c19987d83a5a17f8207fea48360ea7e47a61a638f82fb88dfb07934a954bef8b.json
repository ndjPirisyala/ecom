{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nadee\\\\OneDrive\\\\Documents\\\\Ecommerce-Microservices-dev\\\\Ecommerce-Microservices-dev\\\\Frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/api';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  _s();\n  console.log(useContext(AuthContext));\n  return useContext(AuthContext);\n};\n\n// Import debug utilities with safe fallbacks\n_s(useAuth, \"bm0ZwwmmMt3H7bFMoQVNW1+jl04=\");\nlet logComponentMount, logError, logContextState;\ntry {\n  const debugUtils = require('../utils/debugUtils');\n  logComponentMount = debugUtils.logComponentMount;\n  logError = debugUtils.logError;\n  logContextState = debugUtils.logContextState;\n} catch (e) {\n  // Provide fallback implementations if debug utils can't be loaded\n  logComponentMount = componentName => console.log(`Component mounted: ${componentName}`);\n  logError = (error, source) => console.error(`Error in ${source}:`, error);\n  logContextState = (contextName, state) => console.log(`${contextName} state:`, state);\n  console.warn('Debug utilities could not be loaded, using fallbacks');\n}\n\n// Provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  // State to track if user is authenticated\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  // State to store user data\n  const [user, setUser] = useState(null);\n  // Loading state for initial auth check\n  const [loading, setLoading] = useState(true);\n  // Error state\n  const [error, setError] = useState(null);\n\n  // Log component mount\n  useEffect(() => {\n    try {\n      logComponentMount('AuthProvider');\n      console.log('AuthProvider mounted - checking authentication status');\n    } catch (e) {\n      console.log('AuthProvider mounted - checking authentication status');\n    }\n  }, []);\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const checkAuthStatus = () => {\n      try {\n        console.log('Checking authentication status...');\n        const token = localStorage.getItem('authToken');\n        const savedUser = localStorage.getItem('user');\n        if (token && savedUser) {\n          console.log('Found auth token and user data in localStorage');\n          setIsAuthenticated(true);\n          setUser(JSON.parse(savedUser));\n          try {\n            logContextState('AuthContext', {\n              isAuthenticated: true,\n              user: JSON.parse(savedUser)\n            });\n          } catch (e) {\n            console.log('AuthContext state updated: isAuthenticated=true');\n          }\n        } else {\n          console.log('No auth token or user data found in localStorage');\n          try {\n            logContextState('AuthContext', {\n              isAuthenticated: false,\n              user: null\n            });\n          } catch (e) {\n            console.log('AuthContext state updated: isAuthenticated=false');\n          }\n        }\n      } catch (error) {\n        try {\n          logError(error, 'AuthProvider.checkAuthStatus', {\n            localStorage: {\n              authToken: !!localStorage.getItem('authToken'),\n              user: !!localStorage.getItem('user')\n            }\n          });\n        } catch (e) {\n          console.error('Error checking auth status:', error);\n        }\n        console.error('Error checking auth status:', error);\n        // Reset auth state on error\n        setIsAuthenticated(false);\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuthStatus();\n  }, []);\n  console.log(\"first\", isAuthenticated);\n\n  // Login function\n  const login = async userData => {\n    try {\n      setError(null);\n      const response = await authService.login(userData);\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Store auth data in localStorage\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('user', JSON.stringify(user));\n\n      // Update state\n      setUser(user);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2, _err$response2$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Login failed. Please try again.');\n      return {\n        success: false,\n        message: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Invalid credentials. Please try again.'\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    // Clear auth data from localStorage\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n\n    // Update state\n    setUser(null);\n    setIsAuthenticated(false);\n    setError(null);\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      setError(null);\n      const response = await authService.register(userData);\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Store auth data in localStorage\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('user', JSON.stringify(user));\n\n      // Update state\n      setUser(user);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response3, _err$response3$data, _err$response4, _err$response4$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Registration failed. Please try again.');\n      return {\n        success: false,\n        message: ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Registration failed. Please try again.'\n      };\n    }\n  };\n\n  // Context value\n  const value = {\n    isAuthenticated,\n    user,\n    loading,\n    error,\n    login,\n    logout,\n    register\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"cUXpcHst6DPAAXVpAN4i3O+NkfA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","console","log","logComponentMount","logError","logContextState","debugUtils","require","e","componentName","error","source","contextName","state","warn","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","setError","checkAuthStatus","token","localStorage","getItem","savedUser","JSON","parse","authToken","login","userData","response","data","setItem","stringify","success","err","_err$response","_err$response$data","_err$response2","_err$response2$data","message","logout","removeItem","register","_err$response3","_err$response3$data","_err$response4","_err$response4$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nadee/OneDrive/Documents/Ecommerce-Microservices-dev/Ecommerce-Microservices-dev/Frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/api';\n\n// Create the context\nconst AuthContext = createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  console.log(useContext(AuthContext))\n  return useContext(AuthContext);\n};\n\n// Import debug utilities with safe fallbacks\nlet logComponentMount, logError, logContextState;\ntry {\n  const debugUtils = require('../utils/debugUtils');\n  logComponentMount = debugUtils.logComponentMount;\n  logError = debugUtils.logError;\n  logContextState = debugUtils.logContextState;\n} catch (e) {\n  // Provide fallback implementations if debug utils can't be loaded\n  logComponentMount = (componentName) => console.log(`Component mounted: ${componentName}`);\n  logError = (error, source) => console.error(`Error in ${source}:`, error);\n  logContextState = (contextName, state) => console.log(`${contextName} state:`, state);\n  console.warn('Debug utilities could not be loaded, using fallbacks');\n}\n\n// Provider component\nexport const AuthProvider = ({ children }) => {\n  // State to track if user is authenticated\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  // State to store user data\n  const [user, setUser] = useState(null);\n  // Loading state for initial auth check\n  const [loading, setLoading] = useState(true);\n  // Error state\n  const [error, setError] = useState(null);\n\n  // Log component mount\n  useEffect(() => {\n    try {\n      logComponentMount('AuthProvider');\n      console.log('AuthProvider mounted - checking authentication status');\n    } catch (e) {\n      console.log('AuthProvider mounted - checking authentication status');\n    }\n  }, []);\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const checkAuthStatus = () => {\n      try {\n        console.log('Checking authentication status...');\n        const token = localStorage.getItem('authToken');\n        const savedUser = localStorage.getItem('user');\n        \n        if (token && savedUser) {\n          console.log('Found auth token and user data in localStorage');\n          setIsAuthenticated(true);\n          setUser(JSON.parse(savedUser));\n          try {\n            logContextState('AuthContext', { isAuthenticated: true, user: JSON.parse(savedUser) });\n          } catch (e) {\n            console.log('AuthContext state updated: isAuthenticated=true');\n          }\n        } else {\n          console.log('No auth token or user data found in localStorage');\n          try {\n            logContextState('AuthContext', { isAuthenticated: false, user: null });\n          } catch (e) {\n            console.log('AuthContext state updated: isAuthenticated=false');\n          }\n        }\n      } catch (error) {\n        try {\n          logError(error, 'AuthProvider.checkAuthStatus', { localStorage: { authToken: !!localStorage.getItem('authToken'), user: !!localStorage.getItem('user') } });\n        } catch (e) {\n          console.error('Error checking auth status:', error);\n        }\n        console.error('Error checking auth status:', error);\n        // Reset auth state on error\n        setIsAuthenticated(false);\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    checkAuthStatus();\n  }, []);\n\n  console.log(\"first\", isAuthenticated)\n\n  // Login function\n  const login = async (userData) => {\n    try {\n      setError(null);\n      const response = await authService.login(userData);\n      \n      const { token, user } = response.data;\n      \n      // Store auth data in localStorage\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      \n      // Update state\n      setUser(user);\n      setIsAuthenticated(true);\n      \n      return { success: true };\n    } catch (err) {\n      setError(err.response?.data?.message || 'Login failed. Please try again.');\n      return { \n        success: false, \n        message: err.response?.data?.message || 'Invalid credentials. Please try again.' \n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    // Clear auth data from localStorage\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n    \n    // Update state\n    setUser(null);\n    setIsAuthenticated(false);\n    setError(null);\n  };\n\n  // Register function\n  const register = async (userData) => {\n    try {\n      setError(null);\n      const response = await authService.register(userData);\n      \n      const { token, user } = response.data;\n      \n      // Store auth data in localStorage\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      \n      // Update state\n      setUser(user);\n      setIsAuthenticated(true);\n      \n      return { success: true };\n    } catch (err) {\n      setError(err.response?.data?.message || 'Registration failed. Please try again.');\n      return { \n        success: false, \n        message: err.response?.data?.message || 'Registration failed. Please try again.' \n      };\n    }\n  };\n\n  // Context value\n  const value = {\n    isAuthenticated,\n    user,\n    loading,\n    error,\n    login,\n    logout,\n    register\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}